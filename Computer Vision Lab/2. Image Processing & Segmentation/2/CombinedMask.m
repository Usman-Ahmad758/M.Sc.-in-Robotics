function [BW_segmented,maskedImagesegmented] = CombinedMask(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 16-Nov-2021
%------------------------------------------------------


% Convert RGB image to chosen color space
I = rgb2hsv(RGB);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.993;
channel1Max = 0.035;

% Define thresholds for channel 2 based on histogram settings
channel2Min = 0.478;
channel2Max = 0.877;

% Define thresholds for channel 3 based on histogram settings
channel3Min = 0.210;
channel3Max = 1.000;

% Create mask based on chosen histogram thresholds
sliderBW = ( (I(:,:,1) >= channel1Min) | (I(:,:,1) <= channel1Max) ) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

[BW_segmentedPink,maskedImagesegmentedPink] = segmentImagePink(maskedRGBImage,BW);



%Green Mask


%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 19-Nov-2021
%------------------------------------------------------


% Convert RGB image to chosen color space
I1 = rgb2hsv(RGB);

% Define thresholds for channel 1 based on histogram settings
% Define thresholds for channel 1 based on histogram settings
channel1Min1 = 0.218;
channel1Max1 = 0.405;

% Define thresholds for channel 2 based on histogram settings
channel2Min1 = 0.246;
channel2Max1 = 0.582;

% Define thresholds for channel 3 based on histogram settings
channel3Min1 = 0.000;
channel3Max1 = 0.540;


% Create mask based on chosen histogram thresholds
sliderBW1 = (I1(:,:,1) >= channel1Min1 ) & (I1(:,:,1) <= channel1Max1) & ...
    (I1(:,:,2) >= channel2Min1 ) & (I1(:,:,2) <= channel2Max1) & ...
    (I1(:,:,3) >= channel3Min1 ) & (I1(:,:,3) <= channel3Max1);
BW1 = sliderBW1 ;

% Initialize output masked image based on input image.
maskedRGBImage1 = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage1(repmat(~BW1,[1 1 3])) = 0;

[BW_segmentedGreen,maskedImagesegmentedGreen] = segmentImageGreen(maskedRGBImage1,BW1);

BW_segmented =or (BW_segmentedPink, BW_segmentedGreen);
maskedImagesegmented = maskedImagesegmentedPink + maskedImagesegmentedGreen;



end
